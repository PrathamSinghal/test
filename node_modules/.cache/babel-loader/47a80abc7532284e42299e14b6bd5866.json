{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport bubbleSortSound from '../assets/bubbleSortSound.mp3';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BubbleSort = () => {\n  _s();\n\n  const myState = useSelector(state => state.updateProps);\n  const dispatch = useDispatch();\n  const [audio] = useState(new Audio(bubbleSortSound));\n  let values = myState.values.map(item => item[0]);\n  let ids = myState.values.map(item => item[1]);\n\n  const solve = () => {\n    audio.play();\n\n    for (let i = values.length, timer = 0; i > 0; timer += i - 1, i--) {\n      setTimeout(() => {\n        for (let j = 1; j < i; j++) {\n          setTimeout(() => {\n            document.getElementById(ids[j]).childNodes[1].style.backgroundColor = 'black';\n            document.getElementById(ids[j - 1]).childNodes[1].style.backgroundColor = 'black';\n            setTimeout(() => {\n              document.getElementById(ids[j]).childNodes[1].style.backgroundColor = myState.color;\n              document.getElementById(ids[j - 1]).childNodes[1].style.backgroundColor = myState.color;\n            }, myState.speed - 10);\n\n            if (values[j] < values[j - 1]) {\n              let temp = values[j];\n              values[j] = values[j - 1];\n              values[j - 1] = temp;\n              temp = ids[j];\n              ids[j] = ids[j - 1];\n              ids[j - 1] = temp;\n              document.getElementById(ids[j]).style.transform = `translateX(${j * 11}px)`;\n              document.getElementById(ids[j - 1]).style.transform = `translateX(${(j - 1) * 11}px)`;\n            }\n          }, (j - 1) * myState.speed);\n        }\n      }, timer * myState.speed);\n    }\n\n    setTimeout(() => {\n      dispatch({\n        type: 'PLAY_PAUSE',\n        _play: false\n      });\n      dispatch({\n        type: 'UPDATE_COLOR',\n        color: 'rgb(0, 182, 0)'\n      });\n    }, (myState.values.length - 1) * myState.values.length / 2 * myState.speed + 50);\n  };\n\n  useEffect(() => {\n    if (myState.algorithm === 'bubble') {\n      if (myState.play) solve();\n    }\n  }, [myState.play]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(BubbleSort, \"0TQKIxDe7e+IoRZ91FMhd/EfcnI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = BubbleSort;\nexport default BubbleSort;\n\nvar _c;\n\n$RefreshReg$(_c, \"BubbleSort\");","map":{"version":3,"sources":["C:/Users/SAKSHI SINGH/OneDrive/Desktop/algovisualizer-main-main/src/components/BubbleSort.js"],"names":["React","useEffect","useState","useDispatch","useSelector","bubbleSortSound","BubbleSort","myState","state","updateProps","dispatch","audio","Audio","values","map","item","ids","solve","play","i","length","timer","setTimeout","j","document","getElementById","childNodes","style","backgroundColor","color","speed","temp","transform","type","_play","algorithm"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nimport bubbleSortSound from '../assets/bubbleSortSound.mp3';\n\nconst BubbleSort = () =>{\n   const myState = useSelector(state => state.updateProps);\n   const dispatch = useDispatch();\n\n   const[audio]=useState( new Audio(bubbleSortSound));\n\n   let values = myState.values.map((item) => item[0]);\n   let ids = myState.values.map((item) => item[1]);\n   \n   const solve = () => {\n      audio.play();\n      \n      for(let i = values.length,timer = 0; i > 0;timer += i-1, i--){\n         setTimeout(() => {\n            for(let j = 1; j < i; j++){\n               setTimeout(() => {\n                  document.getElementById(ids[j]).childNodes[1].style.backgroundColor = 'black';\n                  document.getElementById(ids[j-1]).childNodes[1].style.backgroundColor = 'black';\n                  \n                  setTimeout(() => {\n                     document.getElementById(ids[j]).childNodes[1].style.backgroundColor = myState.color;\n                     document.getElementById(ids[j-1]).childNodes[1].style.backgroundColor = myState.color;\n                  },myState.speed-10);\n                     \n                  if(values[j]<values[j-1]){\n                     let temp = values[j];\n                     values[j] = values[j-1];\n                     values[j-1] = temp;\n\n                     temp = ids[j];\n                     ids[j] = ids[j-1];\n                     ids[j-1] = temp;\n                     \n                     document.getElementById(ids[j]).style.transform = `translateX(${j*11}px)`;\n                     \n                     document.getElementById(ids[j-1]).style.transform = `translateX(${(j-1)*11}px)`;\n                        \n                  }\n               },(j-1)*(myState.speed));\n            }\n         }\n         ,(timer)*(myState.speed))\n      }\n      \n      setTimeout(() => {\n         dispatch({\n            type:'PLAY_PAUSE',\n            _play:false\n         })\n\n         dispatch({\n            type:'UPDATE_COLOR',\n            color: 'rgb(0, 182, 0)'\n         })\n\n      },(((myState.values.length-1)*(myState.values.length))/2)*myState.speed+50);\n   }\n   \n   useEffect(() => {\n      if(myState.algorithm==='bubble'){\n         if(myState.play)\n            solve();\n      }\n   },[myState.play]);\n\n   return <></>;\n}\n\nexport default BubbleSort;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}